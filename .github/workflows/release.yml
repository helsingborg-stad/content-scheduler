name: Bump version and create release

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Create Release and bump version files
      uses: helsingborg-stad/release-wp-plugin-action@1.0.2
      with:
        php-version: 8.2
        node-version: 20.6.0
  build-assets:
    needs: ['release']
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Get latest release version
        id: get-version
        run: |
          echo "LATEST_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Update version in package.json
        run: |
          # Read the latest release version from environment variable
          LATEST_VERSION="${{ env.LATEST_RELEASE }}"

          # Update the "version" field in package.json using jq
          jq --arg version "$LATEST_VERSION" '.version = $version' package.json > temp.json && mv temp.json package.json
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com/'
      - name: Inject access token in .npmrc
        run: | 
          echo "registry=https://npm.pkg.github.com/helsingborg-stad" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
      - name: Run CI
        if: ${{ hashFiles('package.json') != '' && hashFiles('package-lock.json') != '' }}
        run: npm ci --no-progress --no-audit
      - name: Run build
        if: ${{ hashFiles('package-lock.json') != '' && hashFiles('gulp.js') == '' }}
        run: npx --yes browserslist@latest --update-db && npm run build
      - name: Run gulp
        if: ${{ hashFiles('package-lock.json') != '' && hashFiles('gulp.js') != '' }}
        run: gulp
      - name: Publish npm package to GHCR
        run: npm publish --registry=https://npm.pkg.github.com
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}